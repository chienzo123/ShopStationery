@model BTL.Areas.Admin.Modal.SanPham

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

}

<h2>Thêm mới</h2>


@using (Html.BeginForm("Create", "SanPhams", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.MaDanhMuc, "Danh mục", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MaDanhMuc", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MaDanhMuc, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TenSP, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TenSP, new { htmlAttributes = new { @class = "form-control", @required = "" } })
            @Html.ValidationMessageFor(model => model.TenSP, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Gia, new { htmlAttributes = new { @class = "form-control", @required = "" } })
            @Html.ValidationMessageFor(model => model.Gia, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MoTa, new { htmlAttributes = new { @class = "form-control", @required = "" } })
            @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Anh, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <img id="output" class="img-rounded" alt="Ảnh" width="180" height="200" src="~/wwwroot/images/tải xuống.png" />
            <p><label for="ufile" style="cursor:  pointer;">Chọn  file  ảnh</label></p>
            <input name="ImageFile" id="ufile" type="file" style="display:  none;" onchange="loadFile(event)" />
           

        </div>
    </div>

    <div class="form-group">
        <label class="col-md-2 control-label  ">
            Chi tiết
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Anh, new { htmlAttributes = new { @class = "form-control", @required = "" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Loai, htmlAttributes: new { @class = "control-label col-md-2", @required = "" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Loai, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Loai, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SoLuong, htmlAttributes: new { @class = "control-label col-md-2", @required = "" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SoLuong, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SoLuong, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Thêm mới" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    <button type="button" class="btn btn-outline-dark">@Html.ActionLink("Trở lại trang sản phẩm", "Index")</button>
</div>
<script>
    var loadFile = function (event) {
        var image = document.getElementById('output'); image.src = URL.createObjectURL(event.target.files[0]);
    };
</script>
@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
